<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Finance Tracker Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <style>
    body {
      background: #f2f6fc;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      padding: 0;
    }
    .navbar {
      border-bottom: 1px solid #dee2e6;
    }
    h1 {
      font-weight: 700;
      color: #333;
      margin: 40px 0 20px;
    }
    .form-container, .table-container, .summary-container {
      background: #ffffff;
      padding: 25px;
      border-radius: 16px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);
      margin-bottom: 30px;
    }
    .note {
      font-family: 'Inter', sans-serif;
      font-size: 0.95rem;
      color: #444;
    }
    .income { color: #198754; font-weight: 600; }
    .expense { color: #dc3545; font-weight: 600; }
    .balance { font-weight: bold; }
    .text-nowrap { white-space: nowrap; }
    .chart-container { height: 300px; }
  </style>
</head>

<body>
  <nav class="navbar navbar-light bg-white shadow-sm sticky-top px-3">
    <span class="navbar-brand mb-0 h5">ðŸ’° Finance Tracker</span>
    <a href="/auth/logout" class="btn btn-sm btn-outline-danger">Logout</a>
  </nav>

  <div class="container mt-4">
    <h1 class="text-center">Dashboard</h1>

    <!-- Summary Cards -->
    <div class="row g-3 mb-4 text-center">
      <div class="col-md-4">
        <div class="p-4 bg-white rounded shadow-sm d-flex justify-content-between align-items-center h-100">
          <div>
            <p class="mb-1 text-muted">Total Balance</p>
            <h4 class="mb-0 text-dark">â‚¹ <%= totalBalance.toLocaleString() %></h4>
          </div>
          <div class="bg-primary text-white rounded-circle p-3">
            <i class="bi bi-wallet2 fs-4"></i>
          </div>
        </div>
      </div>
      <div class="col-md-4">
        <div class="p-4 bg-white rounded shadow-sm d-flex justify-content-between align-items-center h-100">
          <div>
            <p class="mb-1 text-muted">Total Income</p>
            <h4 class="mb-0 text-success">â‚¹ <%= totalIncome.toLocaleString() %></h4>
          </div>
          <div class="bg-success text-white rounded-circle p-3">
            <i class="bi bi-arrow-down-circle fs-4"></i>
          </div>
        </div>
      </div>
      <div class="col-md-4">
        <div class="p-4 bg-white rounded shadow-sm d-flex justify-content-between align-items-center h-100">
          <div>
            <p class="mb-1 text-muted">Total Expenses</p>
            <h4 class="mb-0 text-danger">â‚¹ <%= totalExpenses.toLocaleString() %></h4>
          </div>
          <div class="bg-danger text-white rounded-circle p-3">
            <i class="bi bi-arrow-up-circle fs-4"></i>
          </div>
        </div>
      </div>
    </div>

    <!-- Add Transaction Form -->
    <div class="form-container">
      <h5 class="mb-3">âž• Add New Transaction</h5>
      <form action="/transactions/add" method="POST">
        <div class="row g-3">
          <div class="col-md-2">
            <input type="number" name="amount" class="form-control" placeholder="Amount" required />
          </div>
          <div class="col-md-2">
            <select name="type" class="form-select" required>
              <option value="" disabled selected>Type</option>
              <option value="income">Income</option>
              <option value="expense">Expense</option>
            </select>
          </div>
          <div class="col-md-2">
            <input type="text" name="category" class="form-control" placeholder="Category" required />
          </div>
          <div class="col-md-2">
            <input type="text" name="note" class="form-control" placeholder="Note (optional)" />
          </div>
          <div class="col-md-2">
            <input type="date" name="date" class="form-control" required />
          </div>
          <div class="col-md-2">
            <button type="submit" class="btn btn-success w-100">Add</button>
          </div>
        </div>
      </form>
    </div>

    <!-- Transaction Table -->
    <div class="table-container">
      <h5 class="mb-3">ðŸ“’ Transaction History</h5>
      <div class="table-responsive">
        <table class="table table-bordered align-middle">
          <thead>
            <tr>
              <th>Date</th>
              <th>Category</th>
              <th>Note</th>
              <th>Withdrawals (DR)</th>
              <th>Deposits (CR)</th>
              <th>Running Balance</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            <% let balance = 0; %>
            <% transactions.forEach(tx => { %>
              <% if (tx.type === 'income') balance += tx.amount; else balance -= tx.amount; %>
              <tr>
                <td><%= new Date(tx.date).toLocaleDateString('en-GB') %></td>
                <td><%= tx.category %></td>
                <td class="note"><%= tx.note || '' %></td>
                <td class="expense text-nowrap"><% if (tx.type === 'expense') { %>â‚¹ <%= tx.amount.toFixed(2) %><% } %></td>
                <td class="income text-nowrap"><% if (tx.type === 'income') { %>â‚¹ <%= tx.amount.toFixed(2) %><% } %></td>
                <td class="balance text-nowrap">â‚¹ <%= balance.toFixed(2) %></td>
                <td>
                  <form action="/transactions/delete/<%= tx._id %>" method="POST" onsubmit="return confirm('Delete this transaction?');">
                    <button class="btn btn-sm btn-outline-danger">Delete</button>
                  </form>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>

    <!-- Monthly Summary -->
    <div class="summary-container">
      <h5 class="mb-3">ðŸ“Š Monthly Summary</h5>
      <div class="table-responsive">
        <table class="table table-bordered align-middle">
          <thead>
            <tr>
              <th>Month</th>
              <th>Total Income (CR)</th>
              <th>Total Expense (DR)</th>
              <th>Net Savings</th>
            </tr>
          </thead>
          <tbody>
            <% summary.forEach(s => { %>
              <tr>
                <td><%= new Date(s.year, s.month - 1).toLocaleString('default', { month: 'short', year: 'numeric' }) %></td>
                <td class="income text-nowrap">â‚¹ <%= s.income.toFixed(2) %></td>
                <td class="expense text-nowrap">â‚¹ <%= s.expense.toFixed(2) %></td>
                <td class="balance text-nowrap <%= s.savings >= 0 ? 'income' : 'expense' %>">â‚¹ <%= s.savings.toFixed(2) %></td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>

    <!-- Chart.js Income vs Expense -->
    <div class="chart-container summary-container">
      <h5 class="mb-3">ðŸ“ˆ Income vs Expense (Monthly)</h5>
      <canvas id="incomeExpenseChart"></canvas>
    </div>
  </div>

  <script>
    window.addEventListener('DOMContentLoaded', () => {
      const ctx = document.getElementById('incomeExpenseChart');
      if (ctx && typeof Chart !== 'undefined') {
        // Prepare data safely from server-side
        const incomeData = <%- JSON.stringify(summary.map(s => s.income)) %>;
        const expenseData = <%- JSON.stringify(summary.map(s => s.expense)) %>;
        const labels = <%- JSON.stringify(summary.map(s => new Date(s.year, s.month - 1).toLocaleString('default', { month: 'short', year: 'numeric' }))) %>;
  
        // Calculate max Y-axis value
        const maxVal = Math.max(...incomeData.concat(expenseData)) + 100;
  
        // Render chart
        new Chart(ctx, {
          type: 'bar',
          data: {
            labels: labels,
            datasets: [
              {
                label: 'Income',
                data: incomeData,
                backgroundColor: 'rgba(25, 135, 84, 0.6)'
              },
              {
                label: 'Expense',
                data: expenseData,
                backgroundColor: 'rgba(220, 53, 69, 0.6)'
              }
            ]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: { position: 'top' },
              tooltip: { mode: 'index', intersect: false }
            },
            scales: {
              y: {
                beginAtZero: true,
                suggestedMax: maxVal,
                ticks: {
                  callback: value => `â‚¹ ${value}`
                }
              }
            }
          }
        });
      }
    });
  </script>  
</body>
</html>